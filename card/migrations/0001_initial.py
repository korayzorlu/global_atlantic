# Generated by Django 5.0.4 on 2025-08-18 20:54

import card.models
import django.utils.timezone
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('bankName', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bank name')),
                ('accountNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Account No')),
                ('ibanNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='IBAN')),
                ('accountType', models.CharField(choices=[('vadesiz', 'Vadesiz'), ('mevduat', 'Mevduat')], default='vadesiz', max_length=40, verbose_name='Type')),
                ('swiftNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Swift No')),
                ('branchName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Branch Name')),
                ('branchCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Branch Code')),
            ],
            options={
                'ordering': ['bankName'],
            },
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=140, null=True, verbose_name='Billing Name')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Address')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('vatOffice', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vat Office')),
                ('vatNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Vat No')),
                ('hesapKodu', models.CharField(blank=True, max_length=50, null=True, verbose_name='Hesap Kodu')),
                ('mikroGuid', models.CharField(blank=True, max_length=150, null=True, verbose_name='Mikro Guid')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('capital', models.BooleanField(default=False, verbose_name='Capital')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.JSONField(blank=True, null=True, verbose_name='Role')),
                ('customerCheck', models.BooleanField(default=False, verbose_name='Customer')),
                ('supplierCheck', models.BooleanField(default=False, verbose_name='Supplier')),
                ('agentCheck', models.BooleanField(default=False, verbose_name='Agent')),
                ('ourCompany', models.BooleanField(default=False, verbose_name='Our Company')),
                ('name', models.CharField(max_length=140, verbose_name='Company Name')),
                ('lowerName', models.CharField(blank=True, default='', max_length=140, null=True, verbose_name='Lower Company Name')),
                ('identificationCode', models.CharField(blank=True, default='C', max_length=140, null=True, verbose_name='Identification Code')),
                ('code', models.CharField(blank=True, max_length=140, null=True, verbose_name='Company Code')),
                ('companyNo', models.CharField(blank=True, max_length=140, null=True, verbose_name='Company No')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Address')),
                ('addressChar', models.CharField(blank=True, max_length=150, null=True, verbose_name='Address Char')),
                ('vatOffice', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vat Office')),
                ('vatNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Vat No')),
                ('phone1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone 1')),
                ('phone2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone 2')),
                ('phone3', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone 2')),
                ('phone4', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone 2')),
                ('phone5', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone 2')),
                ('fax', models.CharField(blank=True, max_length=50, null=True, verbose_name='Fax 1')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('web', models.URLField(blank=True, max_length=100, null=True)),
                ('hesapKodu', models.CharField(blank=True, max_length=50, null=True, verbose_name='Hesap Kodu')),
                ('creditPeriot', models.CharField(blank=True, max_length=50, null=True, verbose_name='Credit Periot')),
                ('creditPeriod', models.IntegerField(blank=True, default=30, null=True, verbose_name='Credit Period')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=card.models.company_directory_path, verbose_name='Logo')),
                ('creditLimit', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Credit Limit')),
                ('credit', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Credit')),
                ('unlimitedCheck', models.BooleanField(default=False, verbose_name='Unlimited')),
                ('overPaid', models.JSONField(blank=True, null=True, verbose_name='Over Paid')),
                ('mikroGuid', models.CharField(blank=True, max_length=150, null=True, verbose_name='Mikro Guid')),
                ('eFatura', models.BooleanField(default=False, verbose_name='E-Fatura')),
                ('debt', models.FloatField(blank=True, default=0.0, verbose_name='Debt')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formal_name', models.CharField(max_length=140, verbose_name='Country Name')),
                ('international_formal_name', models.CharField(max_length=140, verbose_name='International Formal Country Name')),
                ('iso2', models.CharField(blank=True, max_length=100, null=True, verbose_name='ISO2')),
                ('iso3', models.CharField(blank=True, max_length=100, null=True, verbose_name='ISO3')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['formal_name'],
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=140, verbose_name='Country')),
                ('currency', models.CharField(max_length=140, verbose_name='Currency')),
                ('code', models.CharField(max_length=140, verbose_name='Code')),
                ('symbol', models.CharField(max_length=140, verbose_name='Symbol')),
                ('flag', models.CharField(max_length=140, verbose_name='Flag')),
                ('baseCurrency', models.CharField(choices=[('try', 'TRY'), ('usd', 'USD')], default='try', max_length=40, verbose_name='Base Currency')),
                ('forexBuying', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Forex Buying')),
                ('forexSelling', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Forex Selling')),
                ('banknoteBuying', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Banknote Buying')),
                ('banknoteSelling', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Banknote Selling')),
                ('rateUSD', models.FloatField(blank=True, null=True, verbose_name='Rate USD')),
                ('rateOther', models.FloatField(blank=True, null=True, verbose_name='Rate Other')),
                ('rateDate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Rate Date')),
                ('tcmbRateDate', models.CharField(blank=True, max_length=40, null=True, verbose_name='TCMB Rate Date')),
                ('sequency', models.IntegerField(blank=True, default=1, null=True, verbose_name='Sequency')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['currency'],
            },
        ),
        migrations.CreateModel(
            name='Current',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debt', models.FloatField(blank=True, default=0.0, verbose_name='Debt')),
                ('credit', models.FloatField(blank=True, default=0.0, verbose_name='Credit')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['company'],
            },
        ),
        migrations.CreateModel(
            name='EnginePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('category', models.CharField(blank=True, max_length=140, null=True, verbose_name='Category')),
                ('serialNo', models.CharField(blank=True, max_length=140, null=True, verbose_name='Serial No')),
                ('cyl', models.CharField(blank=True, max_length=140, null=True, verbose_name='Cyl')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('version', models.CharField(blank=True, max_length=140, null=True, verbose_name='Version')),
            ],
            options={
                'ordering': ['serialNo'],
            },
        ),
        migrations.CreateModel(
            name='Excel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='', verbose_name='Excel File')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalVessel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=140, verbose_name='Vessel Name')),
                ('flag', models.CharField(blank=True, max_length=140, null=True, verbose_name='Flag')),
                ('shipyard', models.CharField(blank=True, max_length=140, null=True, verbose_name='Shipyard')),
                ('hallNo', models.CharField(blank=True, max_length=140, null=True, verbose_name='Hall No')),
                ('imo', models.CharField(max_length=140, verbose_name='IMO')),
                ('mmsi', models.CharField(blank=True, max_length=140, null=True, verbose_name='MMSI')),
                ('callSign', models.CharField(blank=True, max_length=140, null=True, verbose_name='Call Sign')),
                ('type', models.CharField(choices=[('aht', 'AHT'), ('ahts', 'AHTS'), ('aor', 'AOR'), ('atb', 'ATB'), ('c/f', 'C/F'), ('crv', 'CRV'), ('cs', 'CS'), ('db', 'DB'), ('dcv', 'DCV'), ('depv', 'DEPV'), ('dlb', 'DLB'), ('dsv', 'DSV'), ('dv', 'DV'), ('errv', 'ERRV'), ('fpso', 'FPSO'), ('fpv', 'FPV'), ('ft', 'FT'), ('fv', 'FV'), ('gts', 'GTS'), ('hlv', 'HLV'), ('hsc', 'HSC'), ('hsf', 'HSF'), ('htv', 'HTV'), ('irv', 'IRV'), ('itb', 'ITB'), ('lb', 'LB'), ('lng/c', 'LNG/C'), ('lpg/c', 'LPG/C'), ('m/f', 'M/F'), ('m/s', 'M/S'), ('m/t', 'M/T'), ('m/tug', 'M/TUG'), ('m/v', 'M/V'), ('m/y', 'M/Y'), ('msv', 'MSV'), ('msy', 'MSY'), ('mts', 'MTS'), ('my', 'MY'), ('nb', 'NB'), ('nrv', 'NRV'), ('ns', 'NS'), ('osv', 'OSV'), ('pp', 'PP'), ('ps', 'PS'), ('psv', 'PSV'), ('qsmv', 'QSMV'), ('qtev', 'QTEV'), ('rms', 'RMS'), ('rnlb', 'RNLB'), ('rsv', 'RSV'), ('sb', 'SB'), ('ss', 'SS'), ('sscv', 'SSCV'), ('sss', 'SSS'), ('ssv', 'SSV'), ('st', 'ST'), ('sts', 'STS'), ('stv', 'STV'), ('sv', 'SV'), ('sy', 'SY'), ('tev', 'TEV'), ('tiv', 'TIV'), ('ts', 'TS'), ('tss', 'TSS'), ('tv', 'TV')], default='day', max_length=40, verbose_name='Type')),
                ('building', models.CharField(blank=True, max_length=140, null=True, verbose_name='Building')),
                ('grosston', models.CharField(blank=True, max_length=140, null=True, verbose_name='Grosston')),
                ('deadWeight', models.CharField(blank=True, max_length=140, null=True, verbose_name='Dead Weight')),
                ('loa', models.CharField(blank=True, max_length=140, null=True, verbose_name='LOA')),
                ('beam', models.CharField(blank=True, max_length=140, null=True, verbose_name='Beam')),
                ('draft', models.CharField(blank=True, max_length=140, null=True, verbose_name='Draft')),
                ('draught', models.CharField(blank=True, max_length=140, null=True, verbose_name='Draught')),
                ('classificationSociety', models.CharField(blank=True, max_length=140, null=True, verbose_name='Classification Society')),
                ('parts', models.JSONField(blank=True, null=True, verbose_name='Parts')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical vessel',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('name', models.CharField(blank=True, max_length=140, null=True, verbose_name='Owner Name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('name', models.CharField(blank=True, max_length=140, null=True, verbose_name='Personal Name')),
                ('title', models.CharField(blank=True, max_length=140, null=True, verbose_name='Title')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone 1')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140, verbose_name='Vessel Name')),
                ('flag', models.CharField(blank=True, max_length=140, null=True, verbose_name='Flag')),
                ('shipyard', models.CharField(blank=True, max_length=140, null=True, verbose_name='Shipyard')),
                ('hallNo', models.CharField(blank=True, max_length=140, null=True, verbose_name='Hall No')),
                ('imo', models.CharField(max_length=140, verbose_name='IMO')),
                ('mmsi', models.CharField(blank=True, max_length=140, null=True, verbose_name='MMSI')),
                ('callSign', models.CharField(blank=True, max_length=140, null=True, verbose_name='Call Sign')),
                ('type', models.CharField(choices=[('aht', 'AHT'), ('ahts', 'AHTS'), ('aor', 'AOR'), ('atb', 'ATB'), ('c/f', 'C/F'), ('crv', 'CRV'), ('cs', 'CS'), ('db', 'DB'), ('dcv', 'DCV'), ('depv', 'DEPV'), ('dlb', 'DLB'), ('dsv', 'DSV'), ('dv', 'DV'), ('errv', 'ERRV'), ('fpso', 'FPSO'), ('fpv', 'FPV'), ('ft', 'FT'), ('fv', 'FV'), ('gts', 'GTS'), ('hlv', 'HLV'), ('hsc', 'HSC'), ('hsf', 'HSF'), ('htv', 'HTV'), ('irv', 'IRV'), ('itb', 'ITB'), ('lb', 'LB'), ('lng/c', 'LNG/C'), ('lpg/c', 'LPG/C'), ('m/f', 'M/F'), ('m/s', 'M/S'), ('m/t', 'M/T'), ('m/tug', 'M/TUG'), ('m/v', 'M/V'), ('m/y', 'M/Y'), ('msv', 'MSV'), ('msy', 'MSY'), ('mts', 'MTS'), ('my', 'MY'), ('nb', 'NB'), ('nrv', 'NRV'), ('ns', 'NS'), ('osv', 'OSV'), ('pp', 'PP'), ('ps', 'PS'), ('psv', 'PSV'), ('qsmv', 'QSMV'), ('qtev', 'QTEV'), ('rms', 'RMS'), ('rnlb', 'RNLB'), ('rsv', 'RSV'), ('sb', 'SB'), ('ss', 'SS'), ('sscv', 'SSCV'), ('sss', 'SSS'), ('ssv', 'SSV'), ('st', 'ST'), ('sts', 'STS'), ('stv', 'STV'), ('sv', 'SV'), ('sy', 'SY'), ('tev', 'TEV'), ('tiv', 'TIV'), ('ts', 'TS'), ('tss', 'TSS'), ('tv', 'TV')], default='day', max_length=40, verbose_name='Type')),
                ('building', models.CharField(blank=True, max_length=140, null=True, verbose_name='Building')),
                ('grosston', models.CharField(blank=True, max_length=140, null=True, verbose_name='Grosston')),
                ('deadWeight', models.CharField(blank=True, max_length=140, null=True, verbose_name='Dead Weight')),
                ('loa', models.CharField(blank=True, max_length=140, null=True, verbose_name='LOA')),
                ('beam', models.CharField(blank=True, max_length=140, null=True, verbose_name='Beam')),
                ('draft', models.CharField(blank=True, max_length=140, null=True, verbose_name='Draft')),
                ('draught', models.CharField(blank=True, max_length=140, null=True, verbose_name='Draught')),
                ('classificationSociety', models.CharField(blank=True, max_length=140, null=True, verbose_name='Classification Society')),
                ('parts', models.JSONField(blank=True, null=True, verbose_name='Parts')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
