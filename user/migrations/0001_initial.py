# Generated by Django 5.0.4 on 2025-08-18 20:54

import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import user.models
import utilities.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('administration', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('card', '0002_initial'),
        ('source', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base', models.CharField(blank=True, max_length=50, null=True, verbose_name='Base')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Name')),
                ('rate', models.DecimalField(decimal_places=10, default=1.0, max_digits=30, verbose_name='Rate')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='AccessAuthorization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('name', models.CharField(max_length=140, null=True, unique=True, verbose_name='Name')),
                ('code', models.CharField(max_length=140, null=True, unique=True, verbose_name='Code')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(user.models.get_sentinel_user), related_name='access_authorization_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataAuthorization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('name', models.CharField(max_length=140, null=True, unique=True, verbose_name='Name')),
                ('code', models.CharField(max_length=140, null=True, unique=True, verbose_name='Code')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(user.models.get_sentinel_user), related_name='data_authorization_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140, null=True, unique=True, verbose_name='Name')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_department_source_company', to='source.company')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140, null=True, unique=True, verbose_name='Name')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_types', to='user.department')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_type_source_company', to='source.company')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=100)),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_notification_source_company', to='source.company')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_level', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=140, null=True, verbose_name='Name')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='positions', to='user.department')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='user.position')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_position_source_company', to='source.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('image', models.ImageField(blank=True, help_text='Please upload a square image, otherwise center will be cropped.', null=True, upload_to='images/profiles/', verbose_name='Image')),
                ('registrationNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Registration Number')),
                ('identificationNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Identification Number')),
                ('gender', models.CharField(blank=True, choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], max_length=50, null=True)),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('motherName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Mother Name')),
                ('fatherName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Father Name')),
                ('drivingLicence', models.CharField(blank=True, max_length=50, null=True, verbose_name='Driving Licence')),
                ('militaryStatus', models.CharField(blank=True, choices=[('postponed', 'Postponed'), ('completed', 'Completed')], max_length=50, null=True)),
                ('militaryPostponedDate', models.DateField(blank=True, null=True, verbose_name='Military Postponed Date')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone Number')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('criminalRegistrationNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Criminal Registration Number')),
                ('socialSecurityNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Social Security Number')),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Date of start')),
                ('socialSecuirtyStartDate', models.DateField(blank=True, null=True, verbose_name='Date of social security start')),
                ('professionCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Profession Code')),
                ('retirementStatus', models.CharField(blank=True, choices=[('not_retired', 'Not Retired'), ('retired', 'Retired')], default='not_retired', max_length=50, null=True)),
                ('education_level', models.CharField(blank=True, choices=[('none', 'None'), ('primary_school', 'Primary School'), ('secondary_school', 'Secondary School'), ('high_school', 'High School'), ('college', 'College'), ('bachelors_degree', "Bachelor's Degree"), ('masters_degree', "Master's Degree"), ('phd', 'Ph.D.')], default='none', max_length=50)),
                ('salary', models.FloatField(blank=True, default=0, null=True, verbose_name='Salary')),
                ('iban', models.CharField(blank=True, max_length=26, null=True, verbose_name='IBAN')),
                ('degree', models.CharField(blank=True, max_length=100, null=True, verbose_name='Degree')),
                ('position', models.CharField(blank=True, max_length=140, null=True, verbose_name='Position')),
                ('language', models.CharField(blank=True, choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ar-dz', 'Algerian Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('ckb', 'Central Kurdish (Sorani)'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('ig', 'Igbo'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('ms', 'Malay'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('tg', 'Tajik'), ('th', 'Thai'), ('tk', 'Turkmen'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('ug', 'Uyghur'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='tr', max_length=50, verbose_name='Language')),
                ('theme', models.CharField(blank=True, choices=[('dark', 'Dark'), ('light', 'Light')], default='light', max_length=25, null=True, verbose_name='Theme')),
                ('cardColor', models.CharField(blank=True, default='#003865', max_length=25, null=True, verbose_name='Card Color')),
                ('cv', models.FileField(blank=True, null=True, upload_to=user.models.cv_directory_path, validators=[utilities.validators.ExtensionValidator(['pdf', 'doc', 'docx'])], verbose_name='CV / Resume')),
                ('nondisclosureAgreement', models.FileField(blank=True, null=True, upload_to=user.models.nondisclosureAgreement_directory_path, validators=[utilities.validators.ExtensionValidator(['pdf', 'doc', 'docx'])], verbose_name='Non-disclosure Agreement')),
                ('employmentContract', models.FileField(blank=True, null=True, upload_to=user.models.cv_directory_path, validators=[utilities.validators.ExtensionValidator(['pdf', 'doc', 'docx'])], verbose_name='Employment Contract')),
                ('identityCard', models.FileField(blank=True, null=True, upload_to=user.models.cv_directory_path, validators=[utilities.validators.ExtensionValidator(['pdf', 'doc', 'docx'])], verbose_name='Identity Card')),
                ('drivingLicenceCard', models.FileField(blank=True, null=True, upload_to=user.models.cv_directory_path, validators=[utilities.validators.ExtensionValidator(['pdf', 'doc', 'docx'])], verbose_name='Driving Licence Card')),
                ('graduationDocument', models.FileField(blank=True, null=True, upload_to=user.models.cv_directory_path, validators=[utilities.validators.ExtensionValidator(['pdf', 'doc', 'docx'])], verbose_name='Graduation Document')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('accessAuth', models.ManyToManyField(blank=True, related_name='access_auth', to='administration.accessauthorization')),
                ('accessAuthorization', models.ManyToManyField(blank=True, related_name='access_authorization', to='user.accessauthorization')),
                ('company', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_company', to='source.company')),
                ('dataAuth', models.ManyToManyField(blank=True, related_name='data_auth', to='administration.dataauthorization')),
                ('dataAuthorization', models.ManyToManyField(blank=True, related_name='data_authorization', to='user.dataauthorization')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='user.department')),
                ('positionType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='positions', to='user.position')),
                ('salaryCurrency', models.ForeignKey(blank=True, default=102, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='salary_currency', to='card.currency')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_company', to='source.company')),
                ('sourceCompanyList', models.ManyToManyField(blank=True, related_name='source_company_list', to='source.company')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('school', models.CharField(blank=True, max_length=140, null=True, verbose_name='School')),
                ('department', models.CharField(blank=True, max_length=140, null=True, verbose_name='Department')),
                ('education_status', models.CharField(blank=True, choices=[('ongoing', 'Ongoing'), ('graduated', 'Graduated')], default='graduated', max_length=50)),
                ('startDate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Start Date')),
                ('finishDate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Finish Date')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_education_source_company', to='source.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('educationProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='education_profile', to='user.profile')),
            ],
            options={
                'ordering': ['school'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Certificate Name')),
                ('issued_by', models.CharField(max_length=255, verbose_name='Issued By')),
                ('issued_date', models.DateField(verbose_name='Issued Date')),
                ('expired_date', models.DateField(blank=True, null=True, verbose_name='Expired Date')),
                ('file', models.FileField(upload_to='documents/hr/certification', validators=[utilities.validators.ExtensionValidator(['pdf', 'png'])], verbose_name='CV / Resume')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='user.profile')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('amount', models.FloatField(blank=True, default=0, null=True, verbose_name='Amount')),
                ('payment_type', models.CharField(blank=True, choices=[('bonus', 'Bonus'), ('expense', 'Expense'), ('overtime', 'Overtime')], default='graduated', max_length=50)),
                ('additionalPaymentDate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Date')),
                ('currency', models.ForeignKey(blank=True, default=102, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='additional_payment_currency', to='card.currency')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_additional_source_company', to='source.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('additionalPaymentProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='additional_payment_profile', to='user.profile')),
            ],
            options={
                'ordering': ['additionalPaymentProfile'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=256)),
                ('username', models.CharField(max_length=150, null=True)),
                ('path', models.TextField(null=True)),
                ('query_string', models.TextField(blank=True, null=True)),
                ('method', models.CharField(max_length=7)),
                ('secure', models.BooleanField(default=False)),
                ('ajax', models.BooleanField(default=False)),
                ('meta', models.TextField(blank=True, null=True)),
                ('address', models.GenericIPAddressField(blank=True, null=True)),
                ('response_code', models.CharField(max_length=3)),
                ('response_content', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Records',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140, null=True, unique=True, verbose_name='Name')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('members', models.ManyToManyField(blank=True, related_name='team', to=settings.AUTH_USER_MODEL)),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_team_source_company', to='source.company')),
            ],
        ),
    ]
