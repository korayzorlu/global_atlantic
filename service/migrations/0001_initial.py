# Generated by Django 5.0.4 on 2025-08-18 20:54

import django.db.models.deletion
import django.utils.timezone
import service.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('card', '0001_initial'),
        ('data', '0001_initial'),
        ('source', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Acceptance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('identificationCode', models.CharField(blank=True, default='ESM', max_length=140, null=True, verbose_name='Identification Code')),
                ('yearCode', models.CharField(blank=True, max_length=140, null=True, verbose_name='Offer Year')),
                ('code', models.CharField(blank=True, max_length=140, null=True, verbose_name='Offer Code')),
                ('acceptanceNo', models.CharField(blank=True, max_length=140, null=True, verbose_name='Offer No')),
                ('customerRef', models.CharField(blank=True, max_length=140, null=True, verbose_name='Customer Ref')),
                ('paymentType', models.CharField(blank=True, max_length=140, null=True, verbose_name='Payment Type')),
                ('deliveryMethod', models.CharField(blank=True, max_length=140, null=True, verbose_name='Delivery Method')),
                ('machineType', models.CharField(blank=True, choices=[('2-zamanli', '2 Zamanlı'), ('4-zamanli', '4 Zamanlı'), ('genel', 'Genel')], max_length=40, null=True, verbose_name='Machine Types')),
                ('acceptanceDate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Offer Date')),
                ('period', models.CharField(blank=True, max_length=140, null=True, verbose_name='Period')),
                ('discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount')),
                ('discountAmount', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount Amount')),
                ('totalDiscountPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Discount Price')),
                ('totalTotalPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Total Price')),
                ('status', models.CharField(blank=True, choices=[('accepted', 'Accepted'), ('cancelled', 'Cancelled'), ('active', 'Active'), ('finished', 'Finished')], default='accepted', max_length=40, verbose_name='Status')),
                ('note', models.TextField(blank=True, max_length=500, null=True, verbose_name='Note')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.currency')),
                ('customer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.company')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.enginepart')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.person')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acceptance_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
                ('vessel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.vessel')),
            ],
            options={
                'ordering': ['-acceptanceDate'],
            },
        ),
        migrations.CreateModel(
            name='AcceptanceEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('acceptance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.acceptance')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='card.enginepart')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acceptance_equipment_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AcceptancePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('quantity', models.FloatField(default=1)),
                ('unitPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince')),
                ('totalPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Price')),
                ('extra', models.BooleanField(default=False, verbose_name='Extra')),
                ('remark', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Remark')),
                ('acceptance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.acceptance')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acceptance_part_part', to='data.part')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acceptance_part_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AcceptanceServiceCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('quantity', models.FloatField(default=1)),
                ('unitPrice1', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince 3')),
                ('unitPrice2', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince 2')),
                ('unitPrice3', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince 3')),
                ('profit', models.FloatField(blank=True, default=0, null=True, verbose_name='Profit')),
                ('discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('taxPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax Price')),
                ('totalPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Price')),
                ('note', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Note')),
                ('remark', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Remark')),
                ('extra', models.BooleanField(default=False, verbose_name='Extra')),
                ('acceptance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.acceptance')),
                ('serviceCard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acceptance_service_card_service_card', to='data.servicecard')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acceptance_service_card_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('identificationCode', models.CharField(blank=True, default='', max_length=140, null=True, verbose_name='Identification Code')),
                ('yearCode', models.CharField(blank=True, max_length=140, null=True, verbose_name='Offer Year')),
                ('code', models.CharField(blank=True, max_length=140, null=True, verbose_name='Offer Code')),
                ('offerNo', models.CharField(blank=True, max_length=140, null=True, verbose_name='Offer No')),
                ('customerRef', models.CharField(blank=True, max_length=140, null=True, verbose_name='Customer Ref')),
                ('paymentType', models.CharField(blank=True, max_length=140, null=True, verbose_name='Payment Type')),
                ('deliveryMethod', models.CharField(blank=True, max_length=140, null=True, verbose_name='Delivery Method')),
                ('machineType', models.CharField(blank=True, choices=[('2-zamanli', '2 Zamanlı'), ('4-zamanli', '4 Zamanlı'), ('genel', 'Genel')], max_length=40, null=True, verbose_name='Machine Types')),
                ('offerDate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Offer Date')),
                ('period', models.CharField(blank=True, max_length=140, null=True, verbose_name='Period')),
                ('discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount')),
                ('discountAmount', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount Amount')),
                ('totalDiscountPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Discount Price')),
                ('totalTotalPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Total Price')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Confirmed')),
                ('finished', models.BooleanField(default=False, verbose_name='Finished')),
                ('invoiced', models.BooleanField(default=False, verbose_name='Invoiced')),
                ('sendInvoiced', models.BooleanField(default=False, verbose_name='Send Invoiced')),
                ('status', models.CharField(blank=True, choices=[('offer', 'Offer'), ('active', 'Active'), ('finished', 'Finished')], default='offer', max_length=40, verbose_name='Status')),
                ('note', models.TextField(blank=True, max_length=500, null=True, verbose_name='Note')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('currency', models.ForeignKey(blank=True, default=106, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.currency')),
                ('customer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.company')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.enginepart')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.person')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
                ('vessel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='card.vessel')),
            ],
            options={
                'ordering': ['offerDate'],
            },
        ),
        migrations.CreateModel(
            name='OfferDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('file', models.FileField(blank=True, null=True, upload_to=service.models.offer_document_directory_path, verbose_name='File')),
                ('name', models.CharField(blank=True, max_length=140, null=True, verbose_name='File Name')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.offer')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_document_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OfferExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('quantity', models.FloatField(default=1)),
                ('unitPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince')),
                ('totalPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Price')),
                ('extra', models.BooleanField(default=False, verbose_name='Extra')),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_expense_expense', to='data.expense')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.offer')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_expense_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OfferImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('image', models.ImageField(blank=True, null=True, upload_to=service.models.offer_image_directory_path, verbose_name='Image')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.offer')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_image_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OfferNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Title')),
                ('text', models.TextField(blank=True, max_length=500, null=True, verbose_name='Text')),
                ('offerNoteDate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Offer Date')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.offer')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_note_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='OfferPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('quantity', models.FloatField(default=1)),
                ('unitPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince')),
                ('totalPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Price')),
                ('extra', models.BooleanField(default=False, verbose_name='Extra')),
                ('remark', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Remark')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.offer')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_part_part', to='data.part')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_part_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OfferServiceCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionKey', models.CharField(blank=True, max_length=140, null=True, verbose_name='Session Key')),
                ('quantity', models.FloatField(default=1)),
                ('unitPrice1', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince 3')),
                ('unitPrice2', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince 2')),
                ('unitPrice3', models.FloatField(blank=True, default=0, null=True, verbose_name='Unit Prince 3')),
                ('profit', models.FloatField(blank=True, default=0, null=True, verbose_name='Profit')),
                ('discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount')),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax')),
                ('taxPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Tax Price')),
                ('totalPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Price')),
                ('note', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Note')),
                ('remark', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Remark')),
                ('extra', models.BooleanField(default=False, verbose_name='Extra')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.offer')),
                ('serviceCard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_service_card_service_card', to='data.servicecard')),
                ('sourceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_service_card_source_company', to='source.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(service.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='offerexpense',
            constraint=models.UniqueConstraint(fields=('expense', 'offer'), name='unique_expense_offer'),
        ),
    ]
