# Generated by Django 5.0.4 on 2025-08-18 20:54

import datetime
import django.core.validators
import django.db.models.deletion
import sales.models
import utilities.validators
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('information', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClaimReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('WP', 'Wrong Part'), ('MP', 'Mismatched Part'), ('II', 'Customer Provided Incomplete Information'), ('PAU', 'Problems After Using (Material Quality etc.)'), ('DP', 'Damaged Part'), ('OR', 'Other Reasons')], max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClaimResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('RESS', "The Part Has Been Returned(In The Entech Semar's Stock)"), ('RSS', "The Part Has Been Returned(In The Supplier's Stock)"), ('PR', 'Part Replaced'), ('CGUC', 'Customer Gave Up The Claim'), ('ACCP', 'The Amount Claimed On The Claim Has Been Paid')], max_length=4, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=16, null=True, unique=True, verbose_name='No')),
                ('process_type', models.CharField(choices=[('STV', 'Supplier To Vessel'), ('STC', 'Supplier To Customer'), ('WTV', 'Warehouse To Vessel'), ('WTC', 'Warehouse To Customer'), ('STW', 'Supplier To Warehouse')], max_length=3, verbose_name='Process Type')),
                ('is_delivered', models.BooleanField(default=False, verbose_name='Is Delivered?')),
                ('shipping_company', models.CharField(max_length=50, verbose_name='Shipping Company')),
                ('tracking_no', models.CharField(default='', max_length=16, verbose_name='Tracking No')),
                ('port', models.CharField(blank=True, max_length=50, null=True, verbose_name='Port')),
                ('agent', models.CharField(blank=True, max_length=50, null=True, verbose_name='Agent')),
                ('eta', models.CharField(blank=True, max_length=50, null=True, verbose_name='ETA')),
                ('customer_location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer Location')),
                ('waybill_no', models.CharField(max_length=16, verbose_name='Waybill No')),
                ('dispatch_date', models.DateField()),
                ('delivery_date', models.DateField(default=datetime.date.today)),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Direct Phone')),
                ('fax_address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Fax Address')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('person_in_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Person in Contact')),
                ('weight', models.CharField(max_length=50, verbose_name='Weight')),
                ('dimensions', models.CharField(max_length=50, verbose_name='Dimensions')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='information.country')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
        ),
        migrations.CreateModel(
            name='InquiryPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Quantity')),
                ('order_no', models.PositiveIntegerField(null=True, verbose_name='Order No')),
                ('quality', models.CharField(choices=[('original', 'Original'), ('oem', 'OEM'), ('other', 'Other')], default='original', max_length=10)),
                ('unit_price', models.DecimalField(decimal_places=2, default=1.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('1.0'))], verbose_name='Unit Price')),
                ('is_added_in_quotation', models.BooleanField(default=False, verbose_name='Is Added in Quotation')),
                ('availability', models.CharField(choices=[('day', 'Day'), ('week', 'Week'), ('tba', 'TBA'), ('ex_stock', 'Ex Stock'), ('ex_stock_istanbul', 'Ex Stock Istanbul')], default='week', max_length=30)),
                ('availability_period', models.IntegerField(default=1, null=True, verbose_name='Availability Period')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(null=True, verbose_name='Note')),
                ('quotation_date', models.DateField(default=datetime.date.today)),
                ('no', models.CharField(max_length=16, null=True, unique=True, verbose_name='No')),
                ('payment', models.CharField(choices=[('as_agreed', 'As Agreed'), ('as_advanced', 'As Advanced'), ('as_credit', 'As Credit')], max_length=50, null=True, verbose_name='Payment')),
                ('validity', models.CharField(max_length=50, null=True, verbose_name='Validity')),
                ('delivery', models.CharField(max_length=50, null=True, verbose_name='Delivery')),
                ('vat', models.DecimalField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Vat %')),
                ('is_notified', models.BooleanField(default=False, verbose_name='Is Notified')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=16, null=True, unique=True, verbose_name='No')),
                ('stage', models.CharField(choices=[('request', 'Request'), ('inquiry', 'Inquiry'), ('quotation', 'Quotation'), ('purchase_order', 'Purchase Order'), ('delivery', 'Delivery')], default='', max_length=50)),
                ('project_date', models.DateField(default=datetime.date.today)),
                ('project_deadline', models.DateField(null=True)),
                ('is_closed', models.BooleanField(default=False, verbose_name='Project Closed')),
                ('close_notes', models.TextField(blank=True, null=True, verbose_name='Project Close Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=sales.models.get_upload_to, validators=[utilities.validators.ExtensionValidator(['pdf', 'doc', 'docx', 'odt', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt'])], verbose_name='Document')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('file_stage', models.CharField(blank=True, choices=[('request', 'Request'), ('inquiry', 'Inquiry'), ('quotation', 'Quotation'), ('order confirmation', 'Order Confirmation'), ('purchase order', 'Purchase Order'), ('delivery', 'Delivery')], default='request', max_length=20, null=True)),
                ('file_type', models.CharField(blank=True, choices=[('pdf', 'PDF'), ('xlsx', 'XLSX')], default='pdf', max_length=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=16, null=True, unique=True, verbose_name='No')),
                ('purchase_order_date', models.DateField(default=datetime.date.today)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('stock', 'Stock'), ('customer', 'Customer')], default='stock', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuotationPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profit', models.DecimalField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Profit %')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Discount %')),
                ('checked', models.BooleanField(default=False, null=True)),
                ('part_note', models.TextField(blank=True, null=True, verbose_name='Part Note')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('HP', 'High Price'), ('LQ', 'Low Quality'), ('DO', 'Delayed Order'), ('NN', 'No Need'), ('PO', 'Pending Order')], max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Quantity')),
                ('order_no', models.PositiveIntegerField(null=True, verbose_name='Order No')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryCustoms',
            fields=[
                ('delivery', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='customs', serialize=False, to='sales.delivery')),
                ('customs_commission_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Customs Commission Expense')),
                ('customs_commission_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Customs Commission Charged Amount')),
                ('delivery_order_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Delivery Order Expense')),
                ('delivery_order_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Delivery Order Charged Amount')),
                ('warehouse_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Warehouse Expense')),
                ('warehouse_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Warehouse Charged Amount')),
                ('labour_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Labour Expense')),
                ('labour_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Labour Charged Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryInsurance',
            fields=[
                ('delivery', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='insurance', serialize=False, to='sales.delivery')),
                ('insurance_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Insurance Expense')),
                ('insurance_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Insurance Charged Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryPacking',
            fields=[
                ('delivery', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='packing', serialize=False, to='sales.delivery')),
                ('packing_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Packing Expense')),
                ('packing_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Packing Charged Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryTax',
            fields=[
                ('delivery', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='tax', serialize=False, to='sales.delivery')),
                ('customs_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Customs Expense')),
                ('customs_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Customs Charged Amount')),
                ('surtax_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Surtax Expense')),
                ('surtax_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Surtax Charged Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryTransportation',
            fields=[
                ('delivery', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='transportation', serialize=False, to='sales.delivery')),
                ('insurance_and_inland_haulage_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Insurance and Inland Haulage Expense')),
                ('insurance_and_inland_haulage_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Insurance and Inland Haulage Charged Amount')),
                ('extra_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Extra Expense')),
                ('extra_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Extra Charged Amount')),
                ('other_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Other Expense')),
                ('other_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Other Charged Amount')),
                ('atr_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Atr Expense')),
                ('atr_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Atr Charged Amount')),
                ('certificate_expense', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Certificate Expense')),
                ('certificate_charged_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Certificate Charged Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClaimsFollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='No')),
                ('delievery_delay', models.PositiveIntegerField(default=1, verbose_name='Delivered Delay')),
                ('claim_responsible', models.CharField(choices=[('ESO', 'Operation'), ('HSU', 'Sales'), ('F', 'Forwarder'), ('C', 'Customer'), ('S', 'Shipper'), ('M', 'Manufacturer')], default='ESO', max_length=3, verbose_name='Claim Follow Up Responsible')),
                ('claim_action', models.CharField(choices=[('NAT', 'No Action Taken'), ('PR', 'Parts Replacement'), ('OC', 'Order Cancellation and Part Return'), ('other', 'Other')], default='NAT', max_length=5, verbose_name='Claim Follow Up Followed Action')),
                ('claim_status', models.CharField(choices=[('continues', 'Continues'), ('completed', 'Completed')], default='continues', max_length=9, verbose_name='Claim Follow Up Status')),
                ('customer_happiness', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3, null=True, verbose_name='Is The Customer Happy With Result?')),
                ('claim_notes', models.TextField(null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('claim_reason_choices', models.ManyToManyField(to='sales.claimreason')),
                ('claim_results', models.ManyToManyField(to='sales.claimresult')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claimsfollowup', to='sales.delivery')),
            ],
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=16, null=True, unique=True, verbose_name='No')),
                ('supplier_ref', models.CharField(max_length=140, verbose_name='Supplier Reference')),
                ('inquiry_date', models.DateField(default=datetime.date.today)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
        ),
    ]
