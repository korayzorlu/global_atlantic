"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

from django.contrib import messages

from decouple import config, Csv

from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = str(os.getenv('SECRET_KEY'))

# Application definition

INSTALLED_APPS = [
    "daphne",
    "clearcache",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.forms',
    'rest_framework',
    'django_filters',
    'django_cleanup.apps.CleanupConfig',
    # Installed own app
    'user.apps.UserConfig',
    'beta_profile.apps.BetaProfileConfig',
    'information.apps.InformationConfig',
    'parts.apps.PartsConfig',
    'sales.apps.SalesConfig',
    #'notifications.apps.NotificationsConfig',
    'hr.apps.HrConfig',
    'beta_hr.apps.BetaHrConfig',
    'simple_history',
    'qr_code',
    "card",
    "crispy_forms",
    "storages",
    "ckeditor",
    "ckeditor_uploader",
    "data",
    "django_celery_results",
    "widget_tweaks",
    "scan",
    "sale",
    "note",
    "account",
    "library",
    "drf_multiple_model",
    "rest_framework_datatables_editor",
    "source",
    "service",
    "event",
    "django_select2",
    #"debug_toolbar",
    "crispy_bootstrap3",
    "crispy_bootstrap4",
    "mikro",
    "chat",
    "channels",
    "notifications",
    "report",
    "purchasing",
    "administration",
    "warehouse",
    "corsheaders",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #"user.middleware.RecordMiddleware",
    'notifications.middleware.HtmxMessageMiddleware',
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
    #'core.middleware.PostgreSQLConnectionMiddleware',
    'core.middleware.RedirectMiddleware',
    'core.middleware.TokenAuthMiddleware',
    'core.middleware.CurrentUserMiddleware',
    'core.middleware.CurrentRequestMiddleware',

]


ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'user.context_processors.currencies',
                'notifications.context_processors.notifications',
            ],
        },
    },
]

#WSGI_APPLICATION = 'core.wsgi.application'
ASGI_APPLICATION = 'core.asgi.application'
CHANNEL_LAYERS= {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    },
    'qr-code': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'qr-code-cache',
        'TIMEOUT': 3600
    },
    "select2": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    'staticfiles': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'staticfiles-filehashes'
    }
}

STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

SELECT2_CACHE_BACKEND = "select2"

# REST_FRAMEWORK = {
#     # 'DATE_INPUT_FORMATS': "%d %b %Y",
#     # 'DATE_FORMAT': "%d %b %Y",
#     # 'DATETIME_FORMAT': "%d %b %Y %H:%m",
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated'
#     ],
#     'DEFAULT_FILTER_BACKENDS': [
#         'django_filters.rest_framework.DjangoFilterBackend',
#         'rest_framework_datatables.filters.DatatablesFilterBackend'
#     ],
#     'DEFAULT_RENDERER_CLASSES': [
#         'rest_framework.renderers.JSONRenderer',
#         'rest_framework.renderers.BrowsableAPIRenderer',
#         'rest_framework_datatables.renderers.DatatablesRenderer'
#     ],
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables.pagination.DatatablesPageNumberPagination',
#     'PAGE_SIZE': 50,
# }

REST_FRAMEWORK = {
    # 'DATE_INPUT_FORMATS': "%d %b %Y",
    'DATE_FORMAT': "%d.%m.%Y",
    'DATETIME_FORMAT': "%d.%m.%Y %H:%M",
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework_datatables.filters.DatatablesFilterBackend',
        'rest_framework_datatables_editor.filters.DatatablesFilterBackend'
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework_datatables.renderers.DatatablesRenderer',
        'rest_framework_datatables_editor.renderers.DatatablesRenderer'
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables_editor.pagination.DatatablesPageNumberPagination',
    'PAGE_SIZE': 200,
}



QR_CODE_CACHE_ALIAS = 'qr-code'

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'user:landing_page'
LOGIN_REDIRECT_URL = 'user:dashboard'
LOGOUT_REDIRECT_URL = 'user:landing_page'

X_FRAME_OPTIONS = 'SAMEORIGIN'

FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'

# Messages

MESSAGE_TAGS = {
    messages.DEBUG: "bg-light",
    messages.INFO: "text-white bg-primary",
    messages.SUCCESS: "text-white bg-success",
    messages.WARNING: "text-dark bg-warning",
    messages.ERROR: "text-white bg-danger",
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "formatters": {
        "verbose": {
            "format": "{levelname} - {asctime} - {module} - {process:d} - {thread:d} - {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "file": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": os.path.join(BASE_DIR, "debug.log"),
            "formatter": "verbose",
            "when" : "midnight",
            "interval" : 1,
            "backupCount" : 7,
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "INFO",
            "propagate": True,
        },
        'channels': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

#debug_toolbar
# INTERNAL_IPS = [
#     "127.0.0.1",
# ]

#access token
os.environ['IP'] = str(os.getenv('IP'))

#maintenance mode
MAINTENANCE_MODE = config('MAINTENANCE_MODE', cast = bool, default = False)

#cors for react
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']


#ckeditor
CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',  # Kullanılacak araç çubuğu
        'height': 300,
        'width': '100%',
        'removePlugins': 'stylesheetparser',  # İstenmeyen özellikleri kaldırabilirsiniz
        'extraPlugins': 'codesnippet',  # Ek özellikler ekleyebilirsiniz
    },
}

#APPEND_SLASH = True