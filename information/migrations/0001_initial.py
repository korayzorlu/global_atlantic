# Generated by Django 5.0.4 on 2025-08-18 20:54

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('capital', models.BooleanField(default=False, verbose_name='Capital')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140, unique=True, verbose_name='Company Group Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('phone_number', models.CharField(max_length=50, verbose_name='Phone Number')),
                ('office_address', models.TextField(verbose_name='Office Address')),
                ('position', models.CharField(max_length=140, verbose_name='Position')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ContactCompanyHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_status', models.CharField(choices=[('working', 'Working'), ('not_working', 'Not Working')], default='working', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['-working_status'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formal_name', models.CharField(max_length=140, verbose_name='Country Name')),
                ('international_formal_name', models.CharField(max_length=140, verbose_name='International Formal Country Name')),
                ('iso2', models.CharField(blank=True, max_length=100, null=True, verbose_name='ISO2')),
                ('iso3', models.CharField(blank=True, max_length=100, null=True, verbose_name='ISO3')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['formal_name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalVessel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Vessel Name')),
                ('type', models.CharField(choices=[('M/V', '(M/V) Motor, Vessel'), ('M/T', '(M/T) Motor, Tanker'), ('M/F', '(M/F) Motor, Ferry'), ('M/Y', '(M/Y) Motor, Yatch'), ('M/TUG', '(M/TUG) Motor, Tug'), ('NB', '(NB) Undefined')], default='M/V', max_length=10, verbose_name='Vessel Type')),
                ('imo', models.CharField(max_length=7, null=True, verbose_name='IMO Number')),
                ('flag', models.TextField(max_length=100, verbose_name='Flag')),
                ('flag_name', models.CharField(max_length=40, null=True, verbose_name='Flag Name')),
                ('gross_ton', models.IntegerField(blank=True, null=True, verbose_name='Gross Ton')),
                ('deadweight', models.IntegerField(blank=True, null=True, verbose_name='Deadweight')),
                ('year_built', models.IntegerField(blank=True, null=True, verbose_name='Year Built')),
                ('hull_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Hull No')),
                ('shipyard', models.CharField(blank=True, max_length=60, null=True, verbose_name='Shipyard')),
                ('status', models.CharField(choices=[('available', 'Available'), ('not_available', 'Not Available')], default='available', max_length=50, verbose_name='Status')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical vessel',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Vessel Name')),
                ('type', models.CharField(choices=[('M/V', '(M/V) Motor, Vessel'), ('M/T', '(M/T) Motor, Tanker'), ('M/F', '(M/F) Motor, Ferry'), ('M/Y', '(M/Y) Motor, Yatch'), ('M/TUG', '(M/TUG) Motor, Tug'), ('NB', '(NB) Undefined')], default='M/V', max_length=10, verbose_name='Vessel Type')),
                ('imo', models.CharField(max_length=7, null=True, verbose_name='IMO Number')),
                ('flag', models.ImageField(upload_to='images/flags/', verbose_name='Flag')),
                ('flag_name', models.CharField(max_length=40, null=True, verbose_name='Flag Name')),
                ('gross_ton', models.IntegerField(blank=True, null=True, verbose_name='Gross Ton')),
                ('deadweight', models.IntegerField(blank=True, null=True, verbose_name='Deadweight')),
                ('year_built', models.IntegerField(blank=True, null=True, verbose_name='Year Built')),
                ('hull_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Hull No')),
                ('shipyard', models.CharField(blank=True, max_length=60, null=True, verbose_name='Shipyard')),
                ('status', models.CharField(choices=[('available', 'Available'), ('not_available', 'Not Available')], default='available', max_length=50, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140, verbose_name='Company Name')),
                ('company_type', models.CharField(choices=[('Customer', 'Customer'), ('Supplier', 'Supplier'), ('Customer & Supplier', 'Customer & Supplier')], default='Customer', max_length=40, verbose_name='Company Type')),
                ('direct_phone', models.CharField(max_length=50, verbose_name='Direct Phone')),
                ('phone1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone 1')),
                ('phone2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone 2')),
                ('fax_address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Fax Address')),
                ('email', models.EmailField(max_length=254)),
                ('vat_office', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vat Office')),
                ('vat_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Vat No')),
                ('website', models.URLField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(verbose_name='Address')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='information.city')),
                ('customer_representative', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Customer Representative')),
                ('key_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='key_accounts', to=settings.AUTH_USER_MODEL, verbose_name='Key Account')),
            ],
        ),
    ]
